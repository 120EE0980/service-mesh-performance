// Code generated by protoc-gen-go. DO NOT EDIT.
// source: smps.proto

package spec

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PerformanceTestConfig_Client_Protocol int32

const (
	PerformanceTestConfig_Client_http PerformanceTestConfig_Client_Protocol = 0
	PerformanceTestConfig_Client_tcp  PerformanceTestConfig_Client_Protocol = 1
	PerformanceTestConfig_Client_udp  PerformanceTestConfig_Client_Protocol = 2
	PerformanceTestConfig_Client_grpc PerformanceTestConfig_Client_Protocol = 3
)

var PerformanceTestConfig_Client_Protocol_name = map[int32]string{
	0: "http",
	1: "tcp",
	2: "udp",
	3: "grpc",
}

var PerformanceTestConfig_Client_Protocol_value = map[string]int32{
	"http": 0,
	"tcp":  1,
	"udp":  2,
	"grpc": 3,
}

func (x PerformanceTestConfig_Client_Protocol) String() string {
	return proto.EnumName(PerformanceTestConfig_Client_Protocol_name, int32(x))
}

func (PerformanceTestConfig_Client_Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{0, 0, 0}
}

type PerformanceTestConfig struct {
	// Spec version
	SmpsVersion string            `protobuf:"bytes,1,opt,name=smps_version,json=smpsVersion,proto3" json:"smps_version,omitempty"`
	Id          string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name        string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Labels      map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Single or distributed load generators
	Clients []*PerformanceTestConfig_Client `protobuf:"bytes,5,rep,name=clients,proto3" json:"clients,omitempty"`
	// Length of time the endpoint will be under load
	Duration             string   `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerformanceTestConfig) Reset()         { *m = PerformanceTestConfig{} }
func (m *PerformanceTestConfig) String() string { return proto.CompactTextString(m) }
func (*PerformanceTestConfig) ProtoMessage()    {}
func (*PerformanceTestConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{0}
}

func (m *PerformanceTestConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformanceTestConfig.Unmarshal(m, b)
}
func (m *PerformanceTestConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformanceTestConfig.Marshal(b, m, deterministic)
}
func (m *PerformanceTestConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformanceTestConfig.Merge(m, src)
}
func (m *PerformanceTestConfig) XXX_Size() int {
	return xxx_messageInfo_PerformanceTestConfig.Size(m)
}
func (m *PerformanceTestConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformanceTestConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PerformanceTestConfig proto.InternalMessageInfo

func (m *PerformanceTestConfig) GetSmpsVersion() string {
	if m != nil {
		return m.SmpsVersion
	}
	return ""
}

func (m *PerformanceTestConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PerformanceTestConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PerformanceTestConfig) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *PerformanceTestConfig) GetClients() []*PerformanceTestConfig_Client {
	if m != nil {
		return m.Clients
	}
	return nil
}

func (m *PerformanceTestConfig) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

type PerformanceTestConfig_Client struct {
	Internal             bool                                  `protobuf:"varint,1,opt,name=internal,proto3" json:"internal,omitempty"`
	LoadGenerator        string                                `protobuf:"bytes,2,opt,name=load_generator,json=loadGenerator,proto3" json:"load_generator,omitempty"`
	Protocol             PerformanceTestConfig_Client_Protocol `protobuf:"varint,3,opt,name=protocol,proto3,enum=SMPS.PerformanceTestConfig_Client_Protocol" json:"protocol,omitempty"`
	Connections          int32                                 `protobuf:"varint,4,opt,name=connections,proto3" json:"connections,omitempty"`
	Rps                  int64                                 `protobuf:"varint,5,opt,name=rps,proto3" json:"rps,omitempty"`
	Headers              map[string]string                     `protobuf:"bytes,6,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Cookies              map[string]string                     `protobuf:"bytes,7,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 string                                `protobuf:"bytes,8,opt,name=body,proto3" json:"body,omitempty"`
	ContentType          string                                `protobuf:"bytes,9,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	EndpointUrl          []string                              `protobuf:"bytes,10,rep,name=endpoint_url,json=endpointUrl,proto3" json:"endpoint_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *PerformanceTestConfig_Client) Reset()         { *m = PerformanceTestConfig_Client{} }
func (m *PerformanceTestConfig_Client) String() string { return proto.CompactTextString(m) }
func (*PerformanceTestConfig_Client) ProtoMessage()    {}
func (*PerformanceTestConfig_Client) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{0, 0}
}

func (m *PerformanceTestConfig_Client) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformanceTestConfig_Client.Unmarshal(m, b)
}
func (m *PerformanceTestConfig_Client) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformanceTestConfig_Client.Marshal(b, m, deterministic)
}
func (m *PerformanceTestConfig_Client) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformanceTestConfig_Client.Merge(m, src)
}
func (m *PerformanceTestConfig_Client) XXX_Size() int {
	return xxx_messageInfo_PerformanceTestConfig_Client.Size(m)
}
func (m *PerformanceTestConfig_Client) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformanceTestConfig_Client.DiscardUnknown(m)
}

var xxx_messageInfo_PerformanceTestConfig_Client proto.InternalMessageInfo

func (m *PerformanceTestConfig_Client) GetInternal() bool {
	if m != nil {
		return m.Internal
	}
	return false
}

func (m *PerformanceTestConfig_Client) GetLoadGenerator() string {
	if m != nil {
		return m.LoadGenerator
	}
	return ""
}

func (m *PerformanceTestConfig_Client) GetProtocol() PerformanceTestConfig_Client_Protocol {
	if m != nil {
		return m.Protocol
	}
	return PerformanceTestConfig_Client_http
}

func (m *PerformanceTestConfig_Client) GetConnections() int32 {
	if m != nil {
		return m.Connections
	}
	return 0
}

func (m *PerformanceTestConfig_Client) GetRps() int64 {
	if m != nil {
		return m.Rps
	}
	return 0
}

func (m *PerformanceTestConfig_Client) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *PerformanceTestConfig_Client) GetCookies() map[string]string {
	if m != nil {
		return m.Cookies
	}
	return nil
}

func (m *PerformanceTestConfig_Client) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *PerformanceTestConfig_Client) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *PerformanceTestConfig_Client) GetEndpointUrl() []string {
	if m != nil {
		return m.EndpointUrl
	}
	return nil
}

type PerformanceTestResult struct {
	// Spec version
	SmpsVersion string            `protobuf:"bytes,1,opt,name=smps_version,json=smpsVersion,proto3" json:"smps_version,omitempty"`
	Id          string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Labels      map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// All times in UTC
	StartTime            *timestamp.Timestamp           `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp           `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	LatenciesMs          *PerformanceTestResult_Latency `protobuf:"bytes,6,opt,name=latencies_ms,json=latenciesMs,proto3" json:"latencies_ms,omitempty"`
	Actual_QPS           float64                        `protobuf:"fixed64,7,opt,name=actual_QPS,json=actualQPS,proto3" json:"actual_QPS,omitempty"`
	DetailsUri           string                         `protobuf:"bytes,8,opt,name=details_uri,json=detailsUri,proto3" json:"details_uri,omitempty"`
	TestId               string                         `protobuf:"bytes,9,opt,name=testId,proto3" json:"testId,omitempty"`
	MeshConfigId         string                         `protobuf:"bytes,10,opt,name=meshConfigId,proto3" json:"meshConfigId,omitempty"`
	EnvId                string                         `protobuf:"bytes,11,opt,name=envId,proto3" json:"envId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *PerformanceTestResult) Reset()         { *m = PerformanceTestResult{} }
func (m *PerformanceTestResult) String() string { return proto.CompactTextString(m) }
func (*PerformanceTestResult) ProtoMessage()    {}
func (*PerformanceTestResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{1}
}

func (m *PerformanceTestResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformanceTestResult.Unmarshal(m, b)
}
func (m *PerformanceTestResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformanceTestResult.Marshal(b, m, deterministic)
}
func (m *PerformanceTestResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformanceTestResult.Merge(m, src)
}
func (m *PerformanceTestResult) XXX_Size() int {
	return xxx_messageInfo_PerformanceTestResult.Size(m)
}
func (m *PerformanceTestResult) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformanceTestResult.DiscardUnknown(m)
}

var xxx_messageInfo_PerformanceTestResult proto.InternalMessageInfo

func (m *PerformanceTestResult) GetSmpsVersion() string {
	if m != nil {
		return m.SmpsVersion
	}
	return ""
}

func (m *PerformanceTestResult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PerformanceTestResult) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *PerformanceTestResult) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *PerformanceTestResult) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *PerformanceTestResult) GetLatenciesMs() *PerformanceTestResult_Latency {
	if m != nil {
		return m.LatenciesMs
	}
	return nil
}

func (m *PerformanceTestResult) GetActual_QPS() float64 {
	if m != nil {
		return m.Actual_QPS
	}
	return 0
}

func (m *PerformanceTestResult) GetDetailsUri() string {
	if m != nil {
		return m.DetailsUri
	}
	return ""
}

func (m *PerformanceTestResult) GetTestId() string {
	if m != nil {
		return m.TestId
	}
	return ""
}

func (m *PerformanceTestResult) GetMeshConfigId() string {
	if m != nil {
		return m.MeshConfigId
	}
	return ""
}

func (m *PerformanceTestResult) GetEnvId() string {
	if m != nil {
		return m.EnvId
	}
	return ""
}

// latency histogram in ms and average
type PerformanceTestResult_Latency struct {
	Min                  float64  `protobuf:"fixed64,1,opt,name=min,proto3" json:"min,omitempty"`
	Average              float64  `protobuf:"fixed64,2,opt,name=average,proto3" json:"average,omitempty"`
	P50                  float64  `protobuf:"fixed64,3,opt,name=p50,proto3" json:"p50,omitempty"`
	P90                  float64  `protobuf:"fixed64,4,opt,name=p90,proto3" json:"p90,omitempty"`
	P99                  float64  `protobuf:"fixed64,5,opt,name=p99,proto3" json:"p99,omitempty"`
	Max                  float64  `protobuf:"fixed64,6,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerformanceTestResult_Latency) Reset()         { *m = PerformanceTestResult_Latency{} }
func (m *PerformanceTestResult_Latency) String() string { return proto.CompactTextString(m) }
func (*PerformanceTestResult_Latency) ProtoMessage()    {}
func (*PerformanceTestResult_Latency) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{1, 0}
}

func (m *PerformanceTestResult_Latency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformanceTestResult_Latency.Unmarshal(m, b)
}
func (m *PerformanceTestResult_Latency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformanceTestResult_Latency.Marshal(b, m, deterministic)
}
func (m *PerformanceTestResult_Latency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformanceTestResult_Latency.Merge(m, src)
}
func (m *PerformanceTestResult_Latency) XXX_Size() int {
	return xxx_messageInfo_PerformanceTestResult_Latency.Size(m)
}
func (m *PerformanceTestResult_Latency) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformanceTestResult_Latency.DiscardUnknown(m)
}

var xxx_messageInfo_PerformanceTestResult_Latency proto.InternalMessageInfo

func (m *PerformanceTestResult_Latency) GetMin() float64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *PerformanceTestResult_Latency) GetAverage() float64 {
	if m != nil {
		return m.Average
	}
	return 0
}

func (m *PerformanceTestResult_Latency) GetP50() float64 {
	if m != nil {
		return m.P50
	}
	return 0
}

func (m *PerformanceTestResult_Latency) GetP90() float64 {
	if m != nil {
		return m.P90
	}
	return 0
}

func (m *PerformanceTestResult_Latency) GetP99() float64 {
	if m != nil {
		return m.P99
	}
	return 0
}

func (m *PerformanceTestResult_Latency) GetMax() float64 {
	if m != nil {
		return m.Max
	}
	return 0
}

type ServiceMeshConfig struct {
	SmpsVersion          string                              `protobuf:"bytes,1,opt,name=smps_version,json=smpsVersion,proto3" json:"smps_version,omitempty"`
	Id                   string                              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Labels               map[string]string                   `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IngressGateway       *ServiceMeshConfig_IngressGateway   `protobuf:"bytes,4,opt,name=ingress_gateway,json=ingressGateway,proto3" json:"ingress_gateway,omitempty"`
	Sidecar              *ServiceMeshConfig_Sidecar          `protobuf:"bytes,5,opt,name=sidecar,proto3" json:"sidecar,omitempty"`
	MeshTelemetry        *ServiceMeshConfig_MeshTelemetry    `protobuf:"bytes,6,opt,name=mesh_telemetry,json=meshTelemetry,proto3" json:"mesh_telemetry,omitempty"`
	MeshPolicy           *ServiceMeshConfig_MeshPolicy       `protobuf:"bytes,7,opt,name=mesh_policy,json=meshPolicy,proto3" json:"mesh_policy,omitempty"`
	MeshControlPlane     *ServiceMeshConfig_MeshControlPlane `protobuf:"bytes,8,opt,name=mesh_control_plane,json=meshControlPlane,proto3" json:"mesh_control_plane,omitempty"`
	MeshPolicyEnabled    bool                                `protobuf:"varint,9,opt,name=mesh_policy_enabled,json=meshPolicyEnabled,proto3" json:"mesh_policy_enabled,omitempty"`
	MeshTelemetryEnabled bool                                `protobuf:"varint,10,opt,name=mesh_telemetry_enabled,json=meshTelemetryEnabled,proto3" json:"mesh_telemetry_enabled,omitempty"`
	MtlsEnabled          bool                                `protobuf:"varint,11,opt,name=mtls_enabled,json=mtlsEnabled,proto3" json:"mtls_enabled,omitempty"`
	ProxyConcurrency     int32                               `protobuf:"varint,12,opt,name=proxy_concurrency,json=proxyConcurrency,proto3" json:"proxy_concurrency,omitempty"`
	MeshBuild            string                              `protobuf:"bytes,13,opt,name=mesh_build,json=meshBuild,proto3" json:"mesh_build,omitempty"`
	ProxyBuild           string                              `protobuf:"bytes,14,opt,name=proxy_build,json=proxyBuild,proto3" json:"proxy_build,omitempty"`
	ExpGroupUuid         string                              `protobuf:"bytes,15,opt,name=exp_group_uuid,json=expGroupUuid,proto3" json:"exp_group_uuid,omitempty"`
	ExpUuid              string                              `protobuf:"bytes,16,opt,name=exp_uuid,json=expUuid,proto3" json:"exp_uuid,omitempty"`
	Profile              string                              `protobuf:"bytes,17,opt,name=profile,proto3" json:"profile,omitempty"`
	Type                 *ServiceMeshes                      `protobuf:"bytes,18,opt,name=Type,proto3" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ServiceMeshConfig) Reset()         { *m = ServiceMeshConfig{} }
func (m *ServiceMeshConfig) String() string { return proto.CompactTextString(m) }
func (*ServiceMeshConfig) ProtoMessage()    {}
func (*ServiceMeshConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{2}
}

func (m *ServiceMeshConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceMeshConfig.Unmarshal(m, b)
}
func (m *ServiceMeshConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceMeshConfig.Marshal(b, m, deterministic)
}
func (m *ServiceMeshConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceMeshConfig.Merge(m, src)
}
func (m *ServiceMeshConfig) XXX_Size() int {
	return xxx_messageInfo_ServiceMeshConfig.Size(m)
}
func (m *ServiceMeshConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceMeshConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceMeshConfig proto.InternalMessageInfo

func (m *ServiceMeshConfig) GetSmpsVersion() string {
	if m != nil {
		return m.SmpsVersion
	}
	return ""
}

func (m *ServiceMeshConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ServiceMeshConfig) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ServiceMeshConfig) GetIngressGateway() *ServiceMeshConfig_IngressGateway {
	if m != nil {
		return m.IngressGateway
	}
	return nil
}

func (m *ServiceMeshConfig) GetSidecar() *ServiceMeshConfig_Sidecar {
	if m != nil {
		return m.Sidecar
	}
	return nil
}

func (m *ServiceMeshConfig) GetMeshTelemetry() *ServiceMeshConfig_MeshTelemetry {
	if m != nil {
		return m.MeshTelemetry
	}
	return nil
}

func (m *ServiceMeshConfig) GetMeshPolicy() *ServiceMeshConfig_MeshPolicy {
	if m != nil {
		return m.MeshPolicy
	}
	return nil
}

func (m *ServiceMeshConfig) GetMeshControlPlane() *ServiceMeshConfig_MeshControlPlane {
	if m != nil {
		return m.MeshControlPlane
	}
	return nil
}

func (m *ServiceMeshConfig) GetMeshPolicyEnabled() bool {
	if m != nil {
		return m.MeshPolicyEnabled
	}
	return false
}

func (m *ServiceMeshConfig) GetMeshTelemetryEnabled() bool {
	if m != nil {
		return m.MeshTelemetryEnabled
	}
	return false
}

func (m *ServiceMeshConfig) GetMtlsEnabled() bool {
	if m != nil {
		return m.MtlsEnabled
	}
	return false
}

func (m *ServiceMeshConfig) GetProxyConcurrency() int32 {
	if m != nil {
		return m.ProxyConcurrency
	}
	return 0
}

func (m *ServiceMeshConfig) GetMeshBuild() string {
	if m != nil {
		return m.MeshBuild
	}
	return ""
}

func (m *ServiceMeshConfig) GetProxyBuild() string {
	if m != nil {
		return m.ProxyBuild
	}
	return ""
}

func (m *ServiceMeshConfig) GetExpGroupUuid() string {
	if m != nil {
		return m.ExpGroupUuid
	}
	return ""
}

func (m *ServiceMeshConfig) GetExpUuid() string {
	if m != nil {
		return m.ExpUuid
	}
	return ""
}

func (m *ServiceMeshConfig) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

func (m *ServiceMeshConfig) GetType() *ServiceMeshes {
	if m != nil {
		return m.Type
	}
	return nil
}

type ServiceMeshConfig_IngressGateway struct {
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// cpu in mCores
	CpuMCores int32 `protobuf:"varint,2,opt,name=cpu_mCores,json=cpuMCores,proto3" json:"cpu_mCores,omitempty"`
	// memory in MB
	MemMb int32 `protobuf:"varint,3,opt,name=mem_mb,json=memMb,proto3" json:"mem_mb,omitempty"`
	// traffic sent thru ingress gateway
	Rps int32 `protobuf:"varint,4,opt,name=rps,proto3" json:"rps,omitempty"`
	// Total bytes sent thru ingress
	Bps                  int32    `protobuf:"varint,5,opt,name=bps,proto3" json:"bps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceMeshConfig_IngressGateway) Reset()         { *m = ServiceMeshConfig_IngressGateway{} }
func (m *ServiceMeshConfig_IngressGateway) String() string { return proto.CompactTextString(m) }
func (*ServiceMeshConfig_IngressGateway) ProtoMessage()    {}
func (*ServiceMeshConfig_IngressGateway) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{2, 0}
}

func (m *ServiceMeshConfig_IngressGateway) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceMeshConfig_IngressGateway.Unmarshal(m, b)
}
func (m *ServiceMeshConfig_IngressGateway) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceMeshConfig_IngressGateway.Marshal(b, m, deterministic)
}
func (m *ServiceMeshConfig_IngressGateway) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceMeshConfig_IngressGateway.Merge(m, src)
}
func (m *ServiceMeshConfig_IngressGateway) XXX_Size() int {
	return xxx_messageInfo_ServiceMeshConfig_IngressGateway.Size(m)
}
func (m *ServiceMeshConfig_IngressGateway) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceMeshConfig_IngressGateway.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceMeshConfig_IngressGateway proto.InternalMessageInfo

func (m *ServiceMeshConfig_IngressGateway) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ServiceMeshConfig_IngressGateway) GetCpuMCores() int32 {
	if m != nil {
		return m.CpuMCores
	}
	return 0
}

func (m *ServiceMeshConfig_IngressGateway) GetMemMb() int32 {
	if m != nil {
		return m.MemMb
	}
	return 0
}

func (m *ServiceMeshConfig_IngressGateway) GetRps() int32 {
	if m != nil {
		return m.Rps
	}
	return 0
}

func (m *ServiceMeshConfig_IngressGateway) GetBps() int32 {
	if m != nil {
		return m.Bps
	}
	return 0
}

type ServiceMeshConfig_EgressGateway struct {
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// cpu in mCores
	CpuMCores int32 `protobuf:"varint,2,opt,name=cpu_mCores,json=cpuMCores,proto3" json:"cpu_mCores,omitempty"`
	// memory in MB
	MemMb int32 `protobuf:"varint,3,opt,name=mem_mb,json=memMb,proto3" json:"mem_mb,omitempty"`
	// traffic sent thru egress gateway
	Rps int32 `protobuf:"varint,4,opt,name=rps,proto3" json:"rps,omitempty"`
	// Total bytes sent thru egress
	Bps                  int32    `protobuf:"varint,5,opt,name=bps,proto3" json:"bps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceMeshConfig_EgressGateway) Reset()         { *m = ServiceMeshConfig_EgressGateway{} }
func (m *ServiceMeshConfig_EgressGateway) String() string { return proto.CompactTextString(m) }
func (*ServiceMeshConfig_EgressGateway) ProtoMessage()    {}
func (*ServiceMeshConfig_EgressGateway) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{2, 1}
}

func (m *ServiceMeshConfig_EgressGateway) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceMeshConfig_EgressGateway.Unmarshal(m, b)
}
func (m *ServiceMeshConfig_EgressGateway) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceMeshConfig_EgressGateway.Marshal(b, m, deterministic)
}
func (m *ServiceMeshConfig_EgressGateway) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceMeshConfig_EgressGateway.Merge(m, src)
}
func (m *ServiceMeshConfig_EgressGateway) XXX_Size() int {
	return xxx_messageInfo_ServiceMeshConfig_EgressGateway.Size(m)
}
func (m *ServiceMeshConfig_EgressGateway) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceMeshConfig_EgressGateway.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceMeshConfig_EgressGateway proto.InternalMessageInfo

func (m *ServiceMeshConfig_EgressGateway) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ServiceMeshConfig_EgressGateway) GetCpuMCores() int32 {
	if m != nil {
		return m.CpuMCores
	}
	return 0
}

func (m *ServiceMeshConfig_EgressGateway) GetMemMb() int32 {
	if m != nil {
		return m.MemMb
	}
	return 0
}

func (m *ServiceMeshConfig_EgressGateway) GetRps() int32 {
	if m != nil {
		return m.Rps
	}
	return 0
}

func (m *ServiceMeshConfig_EgressGateway) GetBps() int32 {
	if m != nil {
		return m.Bps
	}
	return 0
}

type ServiceMeshConfig_Sidecar struct {
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// cpu used by all sidecars except ingress / egress
	CpuMCores int32 `protobuf:"varint,2,opt,name=cpu_mCores,json=cpuMCores,proto3" json:"cpu_mCores,omitempty"`
	MemMb     int32 `protobuf:"varint,3,opt,name=mem_mb,json=memMb,proto3" json:"mem_mb,omitempty"`
	// Total rps traversing all sidecars
	Rps int32 `protobuf:"varint,4,opt,name=rps,proto3" json:"rps,omitempty"`
	// Total bytes sent thru sidecars
	Bps                  int32    `protobuf:"varint,5,opt,name=bps,proto3" json:"bps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceMeshConfig_Sidecar) Reset()         { *m = ServiceMeshConfig_Sidecar{} }
func (m *ServiceMeshConfig_Sidecar) String() string { return proto.CompactTextString(m) }
func (*ServiceMeshConfig_Sidecar) ProtoMessage()    {}
func (*ServiceMeshConfig_Sidecar) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{2, 2}
}

func (m *ServiceMeshConfig_Sidecar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceMeshConfig_Sidecar.Unmarshal(m, b)
}
func (m *ServiceMeshConfig_Sidecar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceMeshConfig_Sidecar.Marshal(b, m, deterministic)
}
func (m *ServiceMeshConfig_Sidecar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceMeshConfig_Sidecar.Merge(m, src)
}
func (m *ServiceMeshConfig_Sidecar) XXX_Size() int {
	return xxx_messageInfo_ServiceMeshConfig_Sidecar.Size(m)
}
func (m *ServiceMeshConfig_Sidecar) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceMeshConfig_Sidecar.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceMeshConfig_Sidecar proto.InternalMessageInfo

func (m *ServiceMeshConfig_Sidecar) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ServiceMeshConfig_Sidecar) GetCpuMCores() int32 {
	if m != nil {
		return m.CpuMCores
	}
	return 0
}

func (m *ServiceMeshConfig_Sidecar) GetMemMb() int32 {
	if m != nil {
		return m.MemMb
	}
	return 0
}

func (m *ServiceMeshConfig_Sidecar) GetRps() int32 {
	if m != nil {
		return m.Rps
	}
	return 0
}

func (m *ServiceMeshConfig_Sidecar) GetBps() int32 {
	if m != nil {
		return m.Bps
	}
	return 0
}

type ServiceMeshConfig_MeshTelemetry struct {
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// cpu used by all mesh_telemetry pods
	CpuMCores int32 `protobuf:"varint,2,opt,name=cpu_mCores,json=cpuMCores,proto3" json:"cpu_mCores,omitempty"`
	MemMb     int32 `protobuf:"varint,3,opt,name=mem_mb,json=memMb,proto3" json:"mem_mb,omitempty"`
	// Total rps traversing all proxies (sidecars+ingress+egress)
	Rps                  int32    `protobuf:"varint,4,opt,name=rps,proto3" json:"rps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceMeshConfig_MeshTelemetry) Reset()         { *m = ServiceMeshConfig_MeshTelemetry{} }
func (m *ServiceMeshConfig_MeshTelemetry) String() string { return proto.CompactTextString(m) }
func (*ServiceMeshConfig_MeshTelemetry) ProtoMessage()    {}
func (*ServiceMeshConfig_MeshTelemetry) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{2, 3}
}

func (m *ServiceMeshConfig_MeshTelemetry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceMeshConfig_MeshTelemetry.Unmarshal(m, b)
}
func (m *ServiceMeshConfig_MeshTelemetry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceMeshConfig_MeshTelemetry.Marshal(b, m, deterministic)
}
func (m *ServiceMeshConfig_MeshTelemetry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceMeshConfig_MeshTelemetry.Merge(m, src)
}
func (m *ServiceMeshConfig_MeshTelemetry) XXX_Size() int {
	return xxx_messageInfo_ServiceMeshConfig_MeshTelemetry.Size(m)
}
func (m *ServiceMeshConfig_MeshTelemetry) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceMeshConfig_MeshTelemetry.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceMeshConfig_MeshTelemetry proto.InternalMessageInfo

func (m *ServiceMeshConfig_MeshTelemetry) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ServiceMeshConfig_MeshTelemetry) GetCpuMCores() int32 {
	if m != nil {
		return m.CpuMCores
	}
	return 0
}

func (m *ServiceMeshConfig_MeshTelemetry) GetMemMb() int32 {
	if m != nil {
		return m.MemMb
	}
	return 0
}

func (m *ServiceMeshConfig_MeshTelemetry) GetRps() int32 {
	if m != nil {
		return m.Rps
	}
	return 0
}

type ServiceMeshConfig_MeshPolicy struct {
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// cpu used by all mesh_policy pods
	CpuMCores int32 `protobuf:"varint,2,opt,name=cpu_mCores,json=cpuMCores,proto3" json:"cpu_mCores,omitempty"`
	MemMb     int32 `protobuf:"varint,3,opt,name=mem_mb,json=memMb,proto3" json:"mem_mb,omitempty"`
	// Total rps traversing all proxies (sidecars+ingress+egress)
	Rps                  int32    `protobuf:"varint,4,opt,name=rps,proto3" json:"rps,omitempty"`
	CacheHitRate         int32    `protobuf:"varint,5,opt,name=cache_hit_rate,json=cacheHitRate,proto3" json:"cache_hit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceMeshConfig_MeshPolicy) Reset()         { *m = ServiceMeshConfig_MeshPolicy{} }
func (m *ServiceMeshConfig_MeshPolicy) String() string { return proto.CompactTextString(m) }
func (*ServiceMeshConfig_MeshPolicy) ProtoMessage()    {}
func (*ServiceMeshConfig_MeshPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{2, 4}
}

func (m *ServiceMeshConfig_MeshPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceMeshConfig_MeshPolicy.Unmarshal(m, b)
}
func (m *ServiceMeshConfig_MeshPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceMeshConfig_MeshPolicy.Marshal(b, m, deterministic)
}
func (m *ServiceMeshConfig_MeshPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceMeshConfig_MeshPolicy.Merge(m, src)
}
func (m *ServiceMeshConfig_MeshPolicy) XXX_Size() int {
	return xxx_messageInfo_ServiceMeshConfig_MeshPolicy.Size(m)
}
func (m *ServiceMeshConfig_MeshPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceMeshConfig_MeshPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceMeshConfig_MeshPolicy proto.InternalMessageInfo

func (m *ServiceMeshConfig_MeshPolicy) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ServiceMeshConfig_MeshPolicy) GetCpuMCores() int32 {
	if m != nil {
		return m.CpuMCores
	}
	return 0
}

func (m *ServiceMeshConfig_MeshPolicy) GetMemMb() int32 {
	if m != nil {
		return m.MemMb
	}
	return 0
}

func (m *ServiceMeshConfig_MeshPolicy) GetRps() int32 {
	if m != nil {
		return m.Rps
	}
	return 0
}

func (m *ServiceMeshConfig_MeshPolicy) GetCacheHitRate() int32 {
	if m != nil {
		return m.CacheHitRate
	}
	return 0
}

type ServiceMeshConfig_MeshControlPlane struct {
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// cpu used by mesh_pilot pods
	CpuMCores int32 `protobuf:"varint,2,opt,name=cpu_mCores,json=cpuMCores,proto3" json:"cpu_mCores,omitempty"`
	MemMb     int32 `protobuf:"varint,3,opt,name=mem_mb,json=memMb,proto3" json:"mem_mb,omitempty"`
	Endpoints int32 `protobuf:"varint,4,opt,name=endpoints,proto3" json:"endpoints,omitempty"`
	// services + service entries
	Services         int32 `protobuf:"varint,5,opt,name=services,proto3" json:"services,omitempty"`
	Sidecars         int32 `protobuf:"varint,6,opt,name=sidecars,proto3" json:"sidecars,omitempty"`
	VirtualServices  int32 `protobuf:"varint,7,opt,name=virtual_services,json=virtualServices,proto3" json:"virtual_services,omitempty"`
	DestinationRules int32 `protobuf:"varint,8,opt,name=destination_rules,json=destinationRules,proto3" json:"destination_rules,omitempty"`
	// how long does it take a listener change to propagate to 90% proxies
	LdsLatencyMs int32 `protobuf:"varint,9,opt,name=lds_latency_ms,json=ldsLatencyMs,proto3" json:"lds_latency_ms,omitempty"`
	// how long does it take for cluster change to propagate to 90% proxies
	CdsLatencyMs         int32    `protobuf:"varint,10,opt,name=cds_latency_ms,json=cdsLatencyMs,proto3" json:"cds_latency_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceMeshConfig_MeshControlPlane) Reset()         { *m = ServiceMeshConfig_MeshControlPlane{} }
func (m *ServiceMeshConfig_MeshControlPlane) String() string { return proto.CompactTextString(m) }
func (*ServiceMeshConfig_MeshControlPlane) ProtoMessage()    {}
func (*ServiceMeshConfig_MeshControlPlane) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{2, 5}
}

func (m *ServiceMeshConfig_MeshControlPlane) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceMeshConfig_MeshControlPlane.Unmarshal(m, b)
}
func (m *ServiceMeshConfig_MeshControlPlane) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceMeshConfig_MeshControlPlane.Marshal(b, m, deterministic)
}
func (m *ServiceMeshConfig_MeshControlPlane) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceMeshConfig_MeshControlPlane.Merge(m, src)
}
func (m *ServiceMeshConfig_MeshControlPlane) XXX_Size() int {
	return xxx_messageInfo_ServiceMeshConfig_MeshControlPlane.Size(m)
}
func (m *ServiceMeshConfig_MeshControlPlane) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceMeshConfig_MeshControlPlane.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceMeshConfig_MeshControlPlane proto.InternalMessageInfo

func (m *ServiceMeshConfig_MeshControlPlane) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ServiceMeshConfig_MeshControlPlane) GetCpuMCores() int32 {
	if m != nil {
		return m.CpuMCores
	}
	return 0
}

func (m *ServiceMeshConfig_MeshControlPlane) GetMemMb() int32 {
	if m != nil {
		return m.MemMb
	}
	return 0
}

func (m *ServiceMeshConfig_MeshControlPlane) GetEndpoints() int32 {
	if m != nil {
		return m.Endpoints
	}
	return 0
}

func (m *ServiceMeshConfig_MeshControlPlane) GetServices() int32 {
	if m != nil {
		return m.Services
	}
	return 0
}

func (m *ServiceMeshConfig_MeshControlPlane) GetSidecars() int32 {
	if m != nil {
		return m.Sidecars
	}
	return 0
}

func (m *ServiceMeshConfig_MeshControlPlane) GetVirtualServices() int32 {
	if m != nil {
		return m.VirtualServices
	}
	return 0
}

func (m *ServiceMeshConfig_MeshControlPlane) GetDestinationRules() int32 {
	if m != nil {
		return m.DestinationRules
	}
	return 0
}

func (m *ServiceMeshConfig_MeshControlPlane) GetLdsLatencyMs() int32 {
	if m != nil {
		return m.LdsLatencyMs
	}
	return 0
}

func (m *ServiceMeshConfig_MeshControlPlane) GetCdsLatencyMs() int32 {
	if m != nil {
		return m.CdsLatencyMs
	}
	return 0
}

type EnvironmentConfig struct {
	SmpsVersion          string                                  `protobuf:"bytes,1,opt,name=smps_version,json=smpsVersion,proto3" json:"smps_version,omitempty"`
	Id                   string                                  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Labels               map[string]string                       `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	KubernetesVersion    string                                  `protobuf:"bytes,4,opt,name=kubernetes_version,json=kubernetesVersion,proto3" json:"kubernetes_version,omitempty"`
	Node                 []*EnvironmentConfig_Node               `protobuf:"bytes,5,rep,name=node,proto3" json:"node,omitempty"`
	IndividualWorkloads  []*EnvironmentConfig_IndividualWorkload `protobuf:"bytes,6,rep,name=individual_workloads,json=individualWorkloads,proto3" json:"individual_workloads,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *EnvironmentConfig) Reset()         { *m = EnvironmentConfig{} }
func (m *EnvironmentConfig) String() string { return proto.CompactTextString(m) }
func (*EnvironmentConfig) ProtoMessage()    {}
func (*EnvironmentConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{3}
}

func (m *EnvironmentConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvironmentConfig.Unmarshal(m, b)
}
func (m *EnvironmentConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvironmentConfig.Marshal(b, m, deterministic)
}
func (m *EnvironmentConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvironmentConfig.Merge(m, src)
}
func (m *EnvironmentConfig) XXX_Size() int {
	return xxx_messageInfo_EnvironmentConfig.Size(m)
}
func (m *EnvironmentConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvironmentConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EnvironmentConfig proto.InternalMessageInfo

func (m *EnvironmentConfig) GetSmpsVersion() string {
	if m != nil {
		return m.SmpsVersion
	}
	return ""
}

func (m *EnvironmentConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EnvironmentConfig) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *EnvironmentConfig) GetKubernetesVersion() string {
	if m != nil {
		return m.KubernetesVersion
	}
	return ""
}

func (m *EnvironmentConfig) GetNode() []*EnvironmentConfig_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *EnvironmentConfig) GetIndividualWorkloads() []*EnvironmentConfig_IndividualWorkload {
	if m != nil {
		return m.IndividualWorkloads
	}
	return nil
}

type EnvironmentConfig_Node struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Cores                int32    `protobuf:"varint,2,opt,name=cores,proto3" json:"cores,omitempty"`
	MemMb                int64    `protobuf:"varint,3,opt,name=mem_mb,json=memMb,proto3" json:"mem_mb,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnvironmentConfig_Node) Reset()         { *m = EnvironmentConfig_Node{} }
func (m *EnvironmentConfig_Node) String() string { return proto.CompactTextString(m) }
func (*EnvironmentConfig_Node) ProtoMessage()    {}
func (*EnvironmentConfig_Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{3, 0}
}

func (m *EnvironmentConfig_Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvironmentConfig_Node.Unmarshal(m, b)
}
func (m *EnvironmentConfig_Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvironmentConfig_Node.Marshal(b, m, deterministic)
}
func (m *EnvironmentConfig_Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvironmentConfig_Node.Merge(m, src)
}
func (m *EnvironmentConfig_Node) XXX_Size() int {
	return xxx_messageInfo_EnvironmentConfig_Node.Size(m)
}
func (m *EnvironmentConfig_Node) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvironmentConfig_Node.DiscardUnknown(m)
}

var xxx_messageInfo_EnvironmentConfig_Node proto.InternalMessageInfo

func (m *EnvironmentConfig_Node) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *EnvironmentConfig_Node) GetCores() int32 {
	if m != nil {
		return m.Cores
	}
	return 0
}

func (m *EnvironmentConfig_Node) GetMemMb() int64 {
	if m != nil {
		return m.MemMb
	}
	return 0
}

type EnvironmentConfig_IndividualWorkload struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	CpuMCores            int32    `protobuf:"varint,3,opt,name=cpu_mCores,json=cpuMCores,proto3" json:"cpu_mCores,omitempty"`
	MemMb                int32    `protobuf:"varint,4,opt,name=mem_mb,json=memMb,proto3" json:"mem_mb,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnvironmentConfig_IndividualWorkload) Reset()         { *m = EnvironmentConfig_IndividualWorkload{} }
func (m *EnvironmentConfig_IndividualWorkload) String() string { return proto.CompactTextString(m) }
func (*EnvironmentConfig_IndividualWorkload) ProtoMessage()    {}
func (*EnvironmentConfig_IndividualWorkload) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e62ab14ed574629, []int{3, 1}
}

func (m *EnvironmentConfig_IndividualWorkload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvironmentConfig_IndividualWorkload.Unmarshal(m, b)
}
func (m *EnvironmentConfig_IndividualWorkload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvironmentConfig_IndividualWorkload.Marshal(b, m, deterministic)
}
func (m *EnvironmentConfig_IndividualWorkload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvironmentConfig_IndividualWorkload.Merge(m, src)
}
func (m *EnvironmentConfig_IndividualWorkload) XXX_Size() int {
	return xxx_messageInfo_EnvironmentConfig_IndividualWorkload.Size(m)
}
func (m *EnvironmentConfig_IndividualWorkload) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvironmentConfig_IndividualWorkload.DiscardUnknown(m)
}

var xxx_messageInfo_EnvironmentConfig_IndividualWorkload proto.InternalMessageInfo

func (m *EnvironmentConfig_IndividualWorkload) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EnvironmentConfig_IndividualWorkload) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *EnvironmentConfig_IndividualWorkload) GetCpuMCores() int32 {
	if m != nil {
		return m.CpuMCores
	}
	return 0
}

func (m *EnvironmentConfig_IndividualWorkload) GetMemMb() int32 {
	if m != nil {
		return m.MemMb
	}
	return 0
}

func init() {
	proto.RegisterEnum("SMPS.PerformanceTestConfig_Client_Protocol", PerformanceTestConfig_Client_Protocol_name, PerformanceTestConfig_Client_Protocol_value)
	proto.RegisterType((*PerformanceTestConfig)(nil), "SMPS.PerformanceTestConfig")
	proto.RegisterMapType((map[string]string)(nil), "SMPS.PerformanceTestConfig.LabelsEntry")
	proto.RegisterType((*PerformanceTestConfig_Client)(nil), "SMPS.PerformanceTestConfig.Client")
	proto.RegisterMapType((map[string]string)(nil), "SMPS.PerformanceTestConfig.Client.CookiesEntry")
	proto.RegisterMapType((map[string]string)(nil), "SMPS.PerformanceTestConfig.Client.HeadersEntry")
	proto.RegisterType((*PerformanceTestResult)(nil), "SMPS.PerformanceTestResult")
	proto.RegisterMapType((map[string]string)(nil), "SMPS.PerformanceTestResult.LabelsEntry")
	proto.RegisterType((*PerformanceTestResult_Latency)(nil), "SMPS.PerformanceTestResult.Latency")
	proto.RegisterType((*ServiceMeshConfig)(nil), "SMPS.ServiceMeshConfig")
	proto.RegisterMapType((map[string]string)(nil), "SMPS.ServiceMeshConfig.LabelsEntry")
	proto.RegisterType((*ServiceMeshConfig_IngressGateway)(nil), "SMPS.ServiceMeshConfig.IngressGateway")
	proto.RegisterType((*ServiceMeshConfig_EgressGateway)(nil), "SMPS.ServiceMeshConfig.EgressGateway")
	proto.RegisterType((*ServiceMeshConfig_Sidecar)(nil), "SMPS.ServiceMeshConfig.Sidecar")
	proto.RegisterType((*ServiceMeshConfig_MeshTelemetry)(nil), "SMPS.ServiceMeshConfig.MeshTelemetry")
	proto.RegisterType((*ServiceMeshConfig_MeshPolicy)(nil), "SMPS.ServiceMeshConfig.MeshPolicy")
	proto.RegisterType((*ServiceMeshConfig_MeshControlPlane)(nil), "SMPS.ServiceMeshConfig.MeshControlPlane")
	proto.RegisterType((*EnvironmentConfig)(nil), "SMPS.EnvironmentConfig")
	proto.RegisterMapType((map[string]string)(nil), "SMPS.EnvironmentConfig.LabelsEntry")
	proto.RegisterType((*EnvironmentConfig_Node)(nil), "SMPS.EnvironmentConfig.Node")
	proto.RegisterType((*EnvironmentConfig_IndividualWorkload)(nil), "SMPS.EnvironmentConfig.IndividualWorkload")
}

func init() {
	proto.RegisterFile("smps.proto", fileDescriptor_8e62ab14ed574629)
}

var fileDescriptor_8e62ab14ed574629 = []byte{
	// 1446 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0x5b, 0x6f, 0x1b, 0xb7,
	0x12, 0x3e, 0xb2, 0x24, 0x4b, 0x1a, 0xd9, 0xb2, 0xcc, 0x5c, 0xb0, 0x47, 0xc8, 0x41, 0x1c, 0x9f,
	0xa4, 0x71, 0x1b, 0x54, 0x31, 0xdc, 0x06, 0xa8, 0x93, 0x02, 0x05, 0x62, 0xb8, 0x8e, 0x81, 0xb8,
	0x75, 0x68, 0x27, 0x05, 0x0a, 0x14, 0x8b, 0xd5, 0xee, 0x58, 0x26, 0xbc, 0xcb, 0x5d, 0x90, 0x5c,
	0xc5, 0x7a, 0x28, 0xda, 0xf7, 0xbe, 0xb4, 0x8f, 0xfd, 0x31, 0xfd, 0x1f, 0x7d, 0xee, 0x2f, 0x29,
	0x78, 0xd9, 0x95, 0x7c, 0xcd, 0xbd, 0x7d, 0x59, 0x70, 0xbe, 0xb9, 0x70, 0x38, 0xfc, 0x86, 0x4b,
	0x02, 0xc8, 0x24, 0x93, 0xfd, 0x4c, 0xa4, 0x2a, 0x25, 0xb5, 0xbd, 0x9d, 0xdd, 0xbd, 0xde, 0xcd,
	0x61, 0x9a, 0x0e, 0x63, 0xbc, 0x6f, 0xb0, 0x41, 0x7e, 0x70, 0x5f, 0xb1, 0x04, 0xa5, 0x0a, 0x92,
	0xcc, 0x9a, 0xf5, 0x9a, 0x32, 0xb1, 0xa3, 0xe5, 0xdf, 0x1b, 0x70, 0x6d, 0x17, 0xc5, 0x41, 0x2a,
	0x92, 0x80, 0x87, 0xb8, 0x8f, 0x52, 0x6d, 0xa4, 0xfc, 0x80, 0x0d, 0xc9, 0x2d, 0x98, 0xd3, 0x81,
	0xfd, 0x11, 0x0a, 0xc9, 0x52, 0xee, 0x55, 0x96, 0x2a, 0x2b, 0x2d, 0xda, 0xd6, 0xd8, 0x0b, 0x0b,
	0x91, 0x0e, 0xcc, 0xb0, 0xc8, 0x9b, 0x31, 0x8a, 0x19, 0x16, 0x11, 0x02, 0x35, 0x1e, 0x24, 0xe8,
	0x55, 0x0d, 0x62, 0xc6, 0xe4, 0x2b, 0x98, 0x8d, 0x83, 0x01, 0xc6, 0xd2, 0xab, 0x2d, 0x55, 0x57,
	0xda, 0x6b, 0x77, 0xfb, 0x3a, 0xc5, 0xfe, 0xb9, 0x73, 0xf6, 0x9f, 0x1a, 0xcb, 0x4d, 0xae, 0xc4,
	0x98, 0x3a, 0x37, 0xf2, 0x25, 0x34, 0xc2, 0x98, 0x21, 0x57, 0xd2, 0xab, 0x9b, 0x08, 0xcb, 0x97,
	0x45, 0xd8, 0x30, 0xa6, 0xb4, 0x70, 0x21, 0x3d, 0x68, 0x46, 0xb9, 0x08, 0x94, 0x5e, 0xc1, 0xac,
	0x49, 0xab, 0x94, 0x7b, 0x7f, 0xd5, 0x60, 0xd6, 0xda, 0x6b, 0x33, 0xc6, 0x15, 0x0a, 0x1e, 0xc4,
	0x66, 0xa1, 0x4d, 0x5a, 0xca, 0xe4, 0x0e, 0x74, 0xe2, 0x34, 0x88, 0xfc, 0x21, 0x72, 0x14, 0x81,
	0x4a, 0x85, 0x5b, 0xf1, 0xbc, 0x46, 0xb7, 0x0a, 0x90, 0x6c, 0x41, 0xd3, 0x94, 0x34, 0x4c, 0x63,
	0x53, 0x80, 0xce, 0xda, 0xbd, 0x57, 0x27, 0xda, 0xdf, 0x75, 0x2e, 0xb4, 0x74, 0x26, 0x4b, 0xd0,
	0x0e, 0x53, 0xce, 0x31, 0xd4, 0x49, 0xea, 0xb2, 0x55, 0x56, 0xea, 0x74, 0x1a, 0x22, 0x5d, 0xa8,
	0x8a, 0x4c, 0x97, 0xa3, 0xb2, 0x52, 0xa5, 0x7a, 0x48, 0xb6, 0xa1, 0x71, 0x88, 0x41, 0x84, 0x42,
	0x7a, 0xb3, 0xa6, 0x48, 0xf7, 0x5f, 0x63, 0xee, 0x27, 0xd6, 0xc3, 0x96, 0xbb, 0xf0, 0xd7, 0xa1,
	0xc2, 0x34, 0x3d, 0x62, 0x28, 0xbd, 0xc6, 0x6b, 0x87, 0xda, 0xb0, 0x1e, 0x2e, 0x94, 0xf3, 0xd7,
	0x7c, 0x18, 0xa4, 0xd1, 0xd8, 0x6b, 0x5a, 0x3e, 0xe8, 0xb1, 0xa6, 0x55, 0x98, 0x72, 0x85, 0x5c,
	0xf9, 0x6a, 0x9c, 0xa1, 0xd7, 0xb2, 0xb4, 0x72, 0xd8, 0xfe, 0x38, 0x43, 0x6d, 0x82, 0x3c, 0xca,
	0x52, 0xc6, 0x95, 0x9f, 0x8b, 0xd8, 0x83, 0xa5, 0xaa, 0x36, 0x29, 0xb0, 0xe7, 0x22, 0xee, 0x3d,
	0x84, 0xb9, 0xe9, 0xec, 0x75, 0x45, 0x8e, 0x70, 0xec, 0x38, 0xaa, 0x87, 0xe4, 0x2a, 0xd4, 0x47,
	0x41, 0x9c, 0xa3, 0xdb, 0x2c, 0x2b, 0x3c, 0x9c, 0xf9, 0xa2, 0xa2, 0x7d, 0xa7, 0xd3, 0x7d, 0x13,
	0xdf, 0xe5, 0x55, 0x68, 0x16, 0x3b, 0x46, 0x9a, 0x50, 0x3b, 0x54, 0x2a, 0xeb, 0xfe, 0x87, 0x34,
	0xa0, 0xaa, 0xc2, 0xac, 0x5b, 0xd1, 0x83, 0x3c, 0xca, 0xba, 0x33, 0x5a, 0x37, 0x14, 0x59, 0xd8,
	0xad, 0xf6, 0xd6, 0xa1, 0x3d, 0xc5, 0xea, 0x37, 0x9a, 0xec, 0xb7, 0xfa, 0x99, 0xde, 0xa4, 0x28,
	0xf3, 0x58, 0xbd, 0x4d, 0x6f, 0x4e, 0xfa, 0xb0, 0x7a, 0x49, 0x1f, 0xda, 0xf8, 0xe7, 0xf6, 0xe1,
	0x3a, 0x80, 0x54, 0x81, 0x50, 0xbe, 0x3e, 0x4c, 0x0c, 0x2b, 0xdb, 0x6b, 0xbd, 0xbe, 0x3d, 0x69,
	0xfa, 0xc5, 0x49, 0xd3, 0xdf, 0x2f, 0x4e, 0x1a, 0xda, 0x32, 0xd6, 0x5a, 0x26, 0x0f, 0xa0, 0x89,
	0x3c, 0xb2, 0x8e, 0xf5, 0x57, 0x3a, 0x36, 0x90, 0x47, 0xc6, 0xed, 0x6b, 0x98, 0x8b, 0x03, 0x85,
	0x3c, 0x64, 0x28, 0xfd, 0x44, 0x9a, 0xfe, 0x6d, 0xaf, 0xfd, 0xff, 0xf2, 0xc4, 0xb5, 0xfd, 0x98,
	0xb6, 0x4b, 0xc7, 0x1d, 0x49, 0xfe, 0x07, 0x10, 0x84, 0x2a, 0x0f, 0x62, 0xff, 0xd9, 0xee, 0x9e,
	0xd7, 0x58, 0xaa, 0xac, 0x54, 0x68, 0xcb, 0x22, 0xcf, 0x76, 0xf7, 0xc8, 0x4d, 0x68, 0x47, 0xa8,
	0x02, 0x16, 0x4b, 0x3f, 0x17, 0xcc, 0x91, 0x15, 0x1c, 0xf4, 0x5c, 0x30, 0x72, 0x1d, 0x66, 0x15,
	0x4a, 0xb5, 0x1d, 0x39, 0xb2, 0x3a, 0x89, 0x2c, 0xc3, 0x5c, 0x82, 0xf2, 0xd0, 0x76, 0xc2, 0x76,
	0xe4, 0x81, 0xd1, 0x9e, 0xc0, 0xf4, 0xee, 0x22, 0x1f, 0x6d, 0x47, 0x5e, 0xdb, 0xee, 0xae, 0x11,
	0x7a, 0x3f, 0x42, 0xc3, 0x65, 0xaa, 0x09, 0x91, 0x30, 0xbb, 0x83, 0x15, 0xaa, 0x87, 0xc4, 0x83,
	0x46, 0x30, 0x42, 0x11, 0x0c, 0x2d, 0x25, 0x2a, 0xb4, 0x10, 0xb5, 0x6d, 0xf6, 0x60, 0xd5, 0x9c,
	0x2e, 0x15, 0xaa, 0x87, 0x06, 0x59, 0x5f, 0x35, 0xbb, 0xa1, 0x91, 0x75, 0x87, 0xac, 0x9b, 0x32,
	0x1b, 0x64, 0xdd, 0xcc, 0x10, 0x1c, 0x9b, 0xea, 0xe9, 0x19, 0x82, 0xe3, 0x77, 0xe1, 0xe4, 0x2f,
	0x0b, 0xb0, 0xb8, 0x87, 0x62, 0xc4, 0x42, 0xdc, 0x29, 0xd7, 0xf9, 0x36, 0x7c, 0x7c, 0x74, 0x8a,
	0x8f, 0x6e, 0x5b, 0xcf, 0xc4, 0x3e, 0x97, 0x8b, 0xdf, 0xc2, 0x02, 0xe3, 0x43, 0x81, 0x52, 0xfa,
	0xc3, 0x40, 0xe1, 0xcb, 0x60, 0xec, 0x08, 0xf9, 0xd1, 0x45, 0x51, 0xb6, 0xad, 0xf9, 0x96, 0xb5,
	0xa6, 0x1d, 0x76, 0x42, 0x26, 0xeb, 0xd0, 0x90, 0x2c, 0xc2, 0x30, 0x10, 0x8e, 0xa0, 0x37, 0x2f,
	0x0a, 0xb4, 0x67, 0xcd, 0x68, 0x61, 0x4f, 0x9e, 0x42, 0x47, 0xef, 0xb8, 0xaf, 0x30, 0xc6, 0x04,
	0x95, 0x18, 0x3b, 0x9e, 0xde, 0xb9, 0x28, 0x82, 0x1e, 0xee, 0x17, 0xc6, 0x74, 0x3e, 0x99, 0x16,
	0xc9, 0x06, 0xb4, 0x4d, 0xb4, 0x2c, 0x8d, 0x59, 0x38, 0x36, 0x64, 0x2d, 0xff, 0x78, 0xe7, 0x87,
	0xda, 0x35, 0x96, 0x14, 0x92, 0x72, 0x4c, 0x5e, 0x00, 0x31, 0x41, 0xf4, 0xa1, 0x2a, 0xd2, 0xd8,
	0xcf, 0xe2, 0x80, 0xa3, 0x21, 0x76, 0x7b, 0x6d, 0xe5, 0xb2, 0x58, 0x1b, 0xd6, 0x61, 0x57, 0xdb,
	0xd3, 0x6e, 0x72, 0x0a, 0x21, 0x7d, 0xb8, 0x32, 0x95, 0x9c, 0x8f, 0x3c, 0x18, 0xc4, 0x68, 0xbb,
	0xa2, 0x49, 0x17, 0x27, 0x09, 0x6c, 0x5a, 0x05, 0xf9, 0x1c, 0xae, 0x9f, 0x2c, 0x4d, 0xe9, 0x02,
	0xc6, 0xe5, 0xea, 0x89, 0xb5, 0x17, 0x5e, 0xb7, 0x60, 0x2e, 0x51, 0xb1, 0x2c, 0x6d, 0xdb, 0xc6,
	0xb6, 0xad, 0xb1, 0xc2, 0xe4, 0x1e, 0x2c, 0x66, 0x22, 0x3d, 0x1e, 0xeb, 0x15, 0x86, 0xb9, 0x10,
	0xba, 0x93, 0xbc, 0x39, 0xf3, 0xa3, 0xec, 0x1a, 0xc5, 0xc6, 0x04, 0xd7, 0xed, 0x6f, 0xb2, 0x18,
	0xe4, 0x2c, 0x8e, 0xbc, 0x79, 0xc3, 0xc0, 0x96, 0x46, 0x1e, 0x6b, 0x40, 0xb7, 0xbf, 0x8d, 0x65,
	0xf5, 0x1d, 0xdb, 0xfe, 0x06, 0xb2, 0x06, 0xb7, 0xa1, 0x83, 0xc7, 0x99, 0x3f, 0x14, 0x69, 0x9e,
	0xf9, 0x79, 0xce, 0x22, 0x6f, 0xc1, 0x36, 0x3a, 0x1e, 0x67, 0x5b, 0x1a, 0x7c, 0x9e, 0xb3, 0x88,
	0xfc, 0x17, 0x9a, 0xda, 0xca, 0xe8, 0xbb, 0x46, 0xdf, 0xc0, 0x63, 0xab, 0xf2, 0xa0, 0x91, 0x89,
	0xf4, 0x80, 0xc5, 0xe8, 0x2d, 0x5a, 0x8d, 0x13, 0xc9, 0x5d, 0xa8, 0xe9, 0x3f, 0x9e, 0x47, 0xcc,
	0xd6, 0x5c, 0x39, 0xb3, 0x35, 0x28, 0xa9, 0x31, 0xe8, 0xfd, 0x5c, 0x81, 0xce, 0x49, 0x0a, 0xeb,
	0x1e, 0x0d, 0xd3, 0x9c, 0x2b, 0xd3, 0x6c, 0x75, 0x6a, 0x05, 0xbd, 0xd8, 0x30, 0xcb, 0xfd, 0x64,
	0x23, 0x15, 0x28, 0x4d, 0xbb, 0xd5, 0x69, 0x2b, 0xcc, 0xf2, 0x1d, 0x03, 0x90, 0x6b, 0x30, 0x9b,
	0x60, 0xe2, 0x27, 0x03, 0x73, 0x88, 0xd4, 0x69, 0x3d, 0xc1, 0x64, 0x67, 0x50, 0x5c, 0x28, 0xec,
	0x55, 0xc3, 0x5c, 0x28, 0xba, 0x50, 0x1d, 0xb8, 0x2b, 0x46, 0x9d, 0xea, 0x61, 0xef, 0x27, 0x98,
	0xdf, 0xfc, 0x57, 0x13, 0x18, 0x43, 0xc3, 0x35, 0xdf, 0x3f, 0x3e, 0x75, 0x02, 0xf3, 0x27, 0xba,
	0xf6, 0xc3, 0x26, 0xd0, 0xfb, 0xb5, 0x02, 0x30, 0x69, 0xed, 0x0f, 0xbc, 0xda, 0xdb, 0xd0, 0x09,
	0x83, 0xf0, 0x10, 0xfd, 0x43, 0xa6, 0x7c, 0x11, 0x28, 0x74, 0x0b, 0x9f, 0x33, 0xe8, 0x13, 0xa6,
	0x68, 0xa0, 0xb0, 0xf7, 0xe7, 0x0c, 0x74, 0x4f, 0x9f, 0x10, 0xef, 0x35, 0xb1, 0x1b, 0xd0, 0x2a,
	0x2e, 0x78, 0x45, 0x7a, 0x13, 0x40, 0xdf, 0xcf, 0xa5, 0x6d, 0x8b, 0x62, 0x5f, 0x4a, 0xd9, 0xe8,
	0x2c, 0x2f, 0xec, 0x15, 0x41, 0xeb, 0x9c, 0x4c, 0x3e, 0x86, 0xee, 0x88, 0x09, 0xf3, 0xef, 0x2f,
	0xfd, 0x1b, 0xc6, 0x66, 0xc1, 0xe1, 0x7b, 0x45, 0x98, 0x7b, 0xb0, 0x18, 0xa1, 0x54, 0x8c, 0x9b,
	0xc7, 0x81, 0x2f, 0xf2, 0x18, 0xa5, 0x39, 0x33, 0xeb, 0xb4, 0x3b, 0xa5, 0xa0, 0x1a, 0xd7, 0x45,
	0x8b, 0x23, 0xe9, 0xdb, 0x5b, 0xc6, 0x58, 0x5f, 0x4e, 0x5a, 0xb6, 0x68, 0x71, 0x24, 0xdd, 0x9f,
	0x7d, 0xc7, 0x96, 0xf6, 0xa4, 0x15, 0xb8, 0xd2, 0x4e, 0x59, 0xbd, 0xcb, 0xdf, 0xf8, 0x8f, 0x1a,
	0x2c, 0x6e, 0xf2, 0x11, 0x13, 0x29, 0x4f, 0x90, 0xab, 0xf7, 0xfe, 0x37, 0x3e, 0x13, 0xfb, 0xdc,
	0xbf, 0xf1, 0xa7, 0x40, 0x8e, 0xf2, 0x01, 0x0a, 0x8e, 0x0a, 0x27, 0xb3, 0xd6, 0x4c, 0xf0, 0xc5,
	0x89, 0xa6, 0x98, 0x7b, 0x15, 0x6a, 0x3c, 0x8d, 0xd0, 0xbd, 0xe6, 0x6e, 0x5c, 0x34, 0xd3, 0x37,
	0x69, 0x84, 0xd4, 0x58, 0x92, 0x1f, 0xe0, 0x2a, 0xe3, 0x11, 0x1b, 0xb1, 0x48, 0x6f, 0xe4, 0xcb,
	0x54, 0x1c, 0xe9, 0xa7, 0x57, 0xf1, 0xd4, 0xf9, 0xe4, 0xa2, 0x08, 0xdb, 0xa5, 0xcf, 0x77, 0xce,
	0x85, 0x5e, 0x61, 0x67, 0x30, 0xd9, 0xdb, 0x82, 0x9a, 0x9e, 0x4c, 0x3f, 0x57, 0xcc, 0x93, 0xc4,
	0xd6, 0xcb, 0x8c, 0x2d, 0xc5, 0x27, 0x3c, 0xb6, 0xc2, 0x29, 0x0e, 0x57, 0x1d, 0x87, 0x7b, 0x0a,
	0xc8, 0xd9, 0x39, 0xcb, 0x57, 0x71, 0x65, 0xea, 0x55, 0x5c, 0x76, 0xce, 0xcc, 0xc5, 0x9d, 0x53,
	0xbd, 0xb8, 0x73, 0x6a, 0x53, 0x9d, 0xf3, 0x0e, 0xfc, 0x79, 0xdc, 0xfe, 0xbe, 0x25, 0x33, 0x0c,
	0x1f, 0xe9, 0xcf, 0x60, 0xd6, 0xdc, 0xc5, 0x3f, 0xfb, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x89, 0xcb,
	0x55, 0x48, 0x50, 0x10, 0x00, 0x00,
}
